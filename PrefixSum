https://www.geeksforgeeks.org/problems/subarrays-with-sum-k/1



class Solution {
    public int countSubarrays(int arr[], int k) {
        // code here
      
        HashMap<Integer, Integer> prefixSumCount = new HashMap<>();
        prefixSumCount.put(0, 1);  // Base case: prefix sum = 0 before starting
        int count = 0;
        int currSum = 0;

        for (int num : arr) {
            currSum += num;

            // Check if there is a prefix sum that equals currSum - k
            if (prefixSumCount.containsKey(currSum - k)) {
                count += prefixSumCount.get(currSum - k);
            }

            // Update the frequency of the current prefix sum
            prefixSumCount.put(currSum, prefixSumCount.getOrDefault(currSum, 0) + 1);
        }

        return count;
    }

    }
